mutation Login($password: String!, $username: String) {
  login(password: $password, username: $username) {
    restToken
    token
    refreshToken
    user {
      id
      username
    }
  }
}

mutation Register(
  $displayName: String
  $dob: Date
  $email: String!
  $firstName: String!
  $lastName: String!
  $password1: String!
  $password2: String!
  $username: String!
) {
  register(
    displayName: $displayName
    dob: $dob
    email: $email
    firstName: $firstName
    lastName: $lastName
    password1: $password1
    password2: $password2
    username: $username
  ) {
    success
    errors
  }
}

mutation Logout($refreshToken: String) {
  logout(refreshToken: $refreshToken) {
    message
  }
}

mutation RefreashToken($refreshToken: String!) {
  refreshToken(refreshToken: $refreshToken ) {
    token
    payload
    refreshExpiresIn
  }
}

mutation CreateProduct(
  $category: Int!
  $condition: ConditionEnum
  $description: String!
  $imageUrl: [ImagesInputType]!
  $price: Float!
  $size: Int
  $name: String!
  $parcelSize: ParcelSizeEnum
  $discount: Float
  $color: [String]
  $brand: Int
  $materials: [Int]
  $style: StyleEnum
  $customBrand: String
  $isFeatured: Boolean
) {
  createProduct(
    category: $category
    condition: $condition
    description: $description
    imagesUrl: $imageUrl
    price: $price
    size: $size
    name: $name
    parcelSize: $parcelSize
    discount: $discount
    color: $color
    brand: $brand
    materials: $materials
    style: $style
    customBrand: $customBrand
    isFeatured: $isFeatured
  ) {
    success
    message
  }
}

mutation likeProduct($productId: Int!) {
  likeProduct(productId: $productId) {
    success
  }
}

mutation UpdateProduct(
  $category: Int
  $condition: ConditionEnum
  $description: String
  $discount: Float
  $name: String
  $imageUrl: ImageUpdateInputType
  $parcelSize: ParcelSizeEnum
  $price: Float
  $productId: Int!
  $size: Int
  $color: [String]
  $brand: Int
  $materials: [Int]
  $style: StyleEnum
  $customBrand: String
  $isFeatured: Boolean
) {
  updateProduct(
    category: $category
    condition: $condition
    description: $description
    discountPrice: $discount
    name: $name
    parcelSize: $parcelSize
    price: $price
    imagesUrl: $imageUrl
    productId: $productId
    size: $size
    color: $color
    brand: $brand
    materials: $materials
    style: $style
    customBrand: $customBrand
    isFeatured: $isFeatured
  ) {
    success
    message
  }
}

mutation DeleteProduct($productId: Int!) {
  deleteProduct(productId: $productId) {
    success
    message
  }
}

mutation UpdateProfile(
  $bio: String
  $country: String
  $displayName: String
  $dob: String
  $firstName: String
  $gender: String
  $lastName: String
  $otp: String
  $phoneNumber: PhoneInputType
  $postCode: String
  $profilePicture: ProfilePictureInputType
  $use2fa: Boolean
  $username: String
  $location: LocationInputType
  $fcmToken: String
  $isVacationMode: Boolean
  $shippingAddress: ShippingAddressInputType
) {
  updateProfile(
    bio: $bio
    country: $country
    displayName: $displayName
    dob: $dob
    firstName: $firstName
    gender: $gender
    lastName: $lastName
    otp: $otp
    phoneNumber: $phoneNumber
    postcode: $postCode
    profilePicture: $profilePicture
    use2fa: $use2fa
    username: $username
    location: $location
    fcmToken: $fcmToken
    isVacationMode: $isVacationMode
    shippingAddress: $shippingAddress
  ) {
    message
  }
}

mutation followUser($followedId: Int!) {
  followUser(followedId: $followedId) {
    success
  }
}

mutation unfollowUser($followedId: Int!) {
  unfollowUser(followedId: $followedId) {
    success
  }
}

mutation UploadFile($files: [Upload]!, $fileType: FileTypeEnum!) {
  upload(files: $files, filetype: $fileType) {
    baseUrl
    data
  }
}

mutation CreateChat($recipient: String!) {
  createChat(recipient: $recipient) {
    chat {
      id
      name
      disableResponse
      createdAt
      lastModified
      participant1Deleted
      participant2Deleted
      unreadMessagesCount
      recipient {
        id
        username
        displayName
        profilePictureUrl
        thumbnailUrl
      }
      lastMessage {
        id
        text
        attachment
        attachmentType
        sender {
          id
          username
          profilePictureUrl
          thumbnailUrl
          displayName
        }
      }
    }
  }
}

mutation DeleteMessage($messageId: Int!) {
  deleteMessage(messageId: $messageId) {
    message
  }
}

mutation DeleteSearchHistory($searchId: ID, $clearAll: Boolean) {
  deleteSearchHistory(searchId: $searchId, clearAll: $clearAll) {
    message
    success
  }
}

mutation createOffer(
  $offerPrice: Float!
  $productIds: [Int]!
  $message: String
) {
  createOffer(
    offerPrice: $offerPrice
    productIds: $productIds
    message: $message
  ) {
    data {
      conversationId
      offer {
        products {
          brand {
            id
            name
          }
          category {
            id
            name
          }
          id
          imagesUrl
          name
          price
          size {
            id
            name
          }
          updatedAt
          status
          seller {
            email
            fullName
            username
            thumbnailUrl
            profilePictureUrl
          }
        }
        status
        updatedBy
        updatedAt
        id
        expiresAt
        createdBy
        createdAt
        offerPrice
        message
        children {
          buyer {
            username
            thumbnailUrl
            profilePictureUrl
            fullName
          }
          createdAt
          createdBy
          id
          status
          updatedAt
          updatedBy
          offerPrice
          message
        }
        buyer {
          username
          thumbnailUrl
          displayName
          fullName
        }
      }
    }
    message
    success
  }
}

mutation RespondToOffer(
  $action: OfferActionEnum!
  $offerId: Int!
  $offerPrice: Float
) {
  respondToOffer(action: $action, offerId: $offerId, offerPrice: $offerPrice) {
    data {
      conversationId
      offer {
        products {
          brand {
            id
            name
          }
          category {
            id
            name
          }
          id
          imagesUrl
          name
          price
          size {
            id
            name
          }
          updatedAt
          status
          seller {
            email
            fullName
            username
            thumbnailUrl
            profilePictureUrl
          }
        }
        status
        updatedBy
        updatedAt
        id
        expiresAt
        createdBy
        createdAt
        offerPrice
        message
        children {
          buyer {
            username
            thumbnailUrl
            profilePictureUrl
            fullName
          }
          createdAt
          createdBy
          id
          status
          updatedAt
          updatedBy
          offerPrice
          message
        }
        buyer {
          username
          thumbnailUrl
          displayName
          fullName
        }
      }
    }
    message
    success
  }
}

mutation DeleteConversation($conversationId: Int!) {
  deleteConversation(conversationId: $conversationId) {
    message
  }
}

mutation ArchiveConversation($conversationId: Int!) {
  archiveConversation(conversationId: $conversationId) {
    message
  }
}

mutation UnArchiveConversation($conversationId: Int!) {
  unarchiveConversation(conversationId: $conversationId) {
    message
  }
}

mutation UpdateReadMessages($messageIds: [Int]!) {
  updateReadMessages(messageIds: $messageIds) {
    success
  }
}

mutation ReadNotification($notificationId: Int) {
  readNotification(notificationId: $notificationId) {
    success
  }
}

mutation DeleteNotification($notificationId: Int!) {
  deleteNotification(notificationId: $notificationId) {
    success
  }
}

mutation UpdateNotificationPreference(
  $emailNotification: NotificationsPreferenceInputType
  $inappNotification: NotificationsPreferenceInputType
  $isEmailNotification: Boolean!
  $isPushNotification: Boolean!
  $isSilentModeOn: Boolean!
) {
  updateNotificationPreference(
    emailNotifications: $emailNotification
    inappNotifications: $inappNotification
    isEmailNotification: $isEmailNotification
    isPushNotification: $isPushNotification
    isSilentModeOn: $isSilentModeOn
  ) {
    success
    notificationPreference {
      user {
        id
        username
      }
      isPushNotification
      isEmailNotification
      inappNotifications
      emailNotifications
    }
  }
}

mutation CreateOrder($productId: Int, $productIds: [Int], $shippingFee: Float) {
  createOrder(
    productId: $productId
    productIds: $productIds
    shippingFee: $shippingFee
  ) {
    order {
      createdAt
      discountPrice
      id
      priceTotal
      shippingAddress
      shippingFee
      status
      updatedAt
      products {
        brand {
          id
          name
        }
        category {
          id
          name
        }
        imagesUrl
        id
        hashtags
        discountPrice
        description
        condition
        createdAt
        customBrand
        price
        name
        likes
        isFeatured
        views
        status
        style
        updatedAt
        userLiked
        parcelSize
        materials {
          id
          name
        }
        color
      }
      user {
        lastName
        thumbnailUrl
        username
        profilePictureUrl
        shippingAddress
        fullName
        displayName
      }
    }
    success
  }
}

mutation CancelOrder($orderId: Int!) {
  cancelOrder(orderId: $orderId) {
    success
  }
}

mutation CreatePaymentIntent(
  $orderId: Int!
  $paymentMethod: PaymentMethodEnum!
) {
  createPaymentIntent(orderId: $orderId, paymentMethod: $paymentMethod) {
    clientSecret
    paymentRef
  }
}

mutation ConfirmPayment($paymentRef: String!) {
  confirmPayment(paymentRef: $paymentRef) {
    paymentStatus
  }
}
mutation PasswordReset(
  $newpassword: String!
  $email: String!
  $token: String!
) {
  passwordReset(password: $newpassword, email: $email, code: $token) {
    message
  }
}

mutation ResetPassword($email: String) {
  resetPassword(email: $email) {
    message
  }
}

mutation ChangeEmail($email: String) {
  changeEmail(email: $email) {
    message
  }
}

mutation VerifyEmail($code: String!, $email: String!) {
  verifyEmail(code: $code, email: $email) {
    token
    restToken
    user {
      username
    }
  }
}

mutation CreateMultibuyDiscount($inputs: [MultibuyInputType]!) {
  createMultibuyDiscount(inputs: $inputs) {
    success
    multibuyDiscounts {
      # Replace the following fields with the actual fields in MultibuyDiscountType
      id
      minItems
      isActive
      discountValue
      seller {
        username
        profilePictureUrl
      }
    }
  }
}
mutation DeactivateMultibuyDiscounts {
  deactivateMultibuyDiscounts {
    success
  }
}

mutation PasswordChange($password: String!, $newPassword: String!) {
  passwordChange(
    oldPassword: $password
    newPassword1: $newPassword
    newPassword2: $newPassword
  ) {
    errors
    success
  }
}
mutation DeleteAccount($password: String!) {
  deleteAccount(password: $password) {
    errors
    success
  }
}

mutation reportAccount(
  $reason: String!,
  $username: String!,
  $content: String
){
  reportAccount(
    reason:$reason,
    username: $username,
    content:$content
  ){
    message
  }
}


mutation reportProduct(
  $reason: String!,
  $productId: ID!,
  $content: String
){
  reportProduct(
    reason:$reason,
    productId: $productId,
    content:$content
  ){
    message
  }
}

